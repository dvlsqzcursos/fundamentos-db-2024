-- MySQL Script generated by MySQL Workbench
-- Wed Apr 17 16:29:34 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sistemaVentas
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sistemaVentas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sistemaVentas` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish2_ci ;
USE `sistemaVentas` ;

-- -----------------------------------------------------
-- Table `sistemaVentas`.`Sucursal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Sucursal` (
  `id_sucursal` INT NOT NULL AUTO_INCREMENT,
  `nombre_sucursal` VARCHAR(45) NULL,
  `direccion` VARCHAR(75) NULL,
  `ciudad` VARCHAR(45) NULL,
  `pais` VARCHAR(45) NULL,
  `telefono` VARCHAR(8) NULL,
  `correo_electronico` VARCHAR(45) NULL,
  `gerente` VARCHAR(45) NULL,
  PRIMARY KEY (`id_sucursal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Empleados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Empleados` (
  `id_empleados` INT NOT NULL AUTO_INCREMENT,
  `rol` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `dpi` VARCHAR(13) NULL,
  `fecha_nac` DATE NULL,
  `anio_inicio_labores` DATE NULL,
  `estado` INT NULL,
  `usuario` VARCHAR(45) NULL,
  `contrasenia` VARCHAR(45) NULL,
  `Sucursal_id_sucursal` INT NOT NULL,
  PRIMARY KEY (`id_empleados`, `Sucursal_id_sucursal`),
  INDEX `fk_Empleados_Sucursal1_idx` (`Sucursal_id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_Empleados_Sucursal1`
    FOREIGN KEY (`Sucursal_id_sucursal`)
    REFERENCES `sistemaVentas`.`Sucursal` (`id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Proveedores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Proveedores` (
  `id_proveedores` INT NOT NULL AUTO_INCREMENT,
  `nombre_institucion` VARCHAR(45) NULL,
  `ubicacion` VARCHAR(45) NULL,
  `contacto` VARCHAR(50) NULL,
  PRIMARY KEY (`id_proveedores`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Representante`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Representante` (
  `id_representante` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `cargo` VARCHAR(45) NULL,
  `telefono` VARCHAR(8) NULL,
  `correo_electronico` VARCHAR(50) NULL,
  `direccion` VARCHAR(75) NULL,
  `Proveedores_id_proveedores` INT NOT NULL,
  PRIMARY KEY (`id_representante`, `Proveedores_id_proveedores`),
  INDEX `fk_Representante_Proveedores1_idx` (`Proveedores_id_proveedores` ASC) VISIBLE,
  CONSTRAINT `fk_Representante_Proveedores1`
    FOREIGN KEY (`Proveedores_id_proveedores`)
    REFERENCES `sistemaVentas`.`Proveedores` (`id_proveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Contacto` (
  `id_contacto` INT NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(8) NULL,
  `correo_electronico` VARCHAR(50) NULL,
  `tipo_contacto` VARCHAR(45) NULL,
  PRIMARY KEY (`id_contacto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Clientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Clientes` (
  `id_clientes` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `dpi` VARCHAR(13) NULL,
  `nit` VARCHAR(9) NULL,
  `Contacto_id_contacto` INT NOT NULL,
  PRIMARY KEY (`id_clientes`, `Contacto_id_contacto`),
  INDEX `fk_Clientes_Contacto1_idx` (`Contacto_id_contacto` ASC) VISIBLE,
  CONSTRAINT `fk_Clientes_Contacto1`
    FOREIGN KEY (`Contacto_id_contacto`)
    REFERENCES `sistemaVentas`.`Contacto` (`id_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Categoria` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nombre_categoria` VARCHAR(45) NULL,
  `descripcion` MEDIUMTEXT NULL,
  `productos_asociados` MEDIUMTEXT NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Productos` (
  `id_productos` INT NOT NULL AUTO_INCREMENT,
  `codigo_sku` VARCHAR(9) NULL,
  `nombre` VARCHAR(45) NULL,
  `descripcion` MEDIUMTEXT NULL,
  `stock` INT NULL,
  `precio_compra` DECIMAL(9,2) NULL,
  `precio_venta` DECIMAL(9,2) NULL,
  `Categoria_id_categoria` INT NOT NULL,
  `Proveedores_id_proveedores` INT NOT NULL,
  PRIMARY KEY (`id_productos`, `Categoria_id_categoria`, `Proveedores_id_proveedores`),
  INDEX `fk_Productos_Categoria1_idx` (`Categoria_id_categoria` ASC) VISIBLE,
  INDEX `fk_Productos_Proveedores1_idx` (`Proveedores_id_proveedores` ASC) VISIBLE,
  CONSTRAINT `fk_Productos_Categoria1`
    FOREIGN KEY (`Categoria_id_categoria`)
    REFERENCES `sistemaVentas`.`Categoria` (`id_categoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Productos_Proveedores1`
    FOREIGN KEY (`Proveedores_id_proveedores`)
    REFERENCES `sistemaVentas`.`Proveedores` (`id_proveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Ingresos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Ingresos` (
  `id_ingresos` INT NOT NULL AUTO_INCREMENT,
  `nombre_producto` VARCHAR(45) NULL,
  `cantidad_ingresada` INT NULL,
  `precio_unitario` DECIMAL(9,2) NULL,
  `fecha_compra` DATE NULL,
  `numero_factura` INT NULL,
  `metodo_pago` INT NULL,
  `observaciones` MEDIUMTEXT NULL,
  `Sucursal_id_sucursal` INT NOT NULL,
  `Productos_id_productos` INT NOT NULL,
  `Productos_Categoria_id_categoria` INT NOT NULL,
  `Productos_Proveedores_id_proveedores` INT NOT NULL,
  `Empleados_id_empleados` INT NOT NULL,
  `Empleados_Sucursal_id_sucursal` INT NOT NULL,
  PRIMARY KEY (`id_ingresos`, `Sucursal_id_sucursal`, `Productos_id_productos`, `Productos_Categoria_id_categoria`, `Productos_Proveedores_id_proveedores`, `Empleados_id_empleados`, `Empleados_Sucursal_id_sucursal`),
  INDEX `fk_Ingresos_Sucursal1_idx` (`Sucursal_id_sucursal` ASC) VISIBLE,
  INDEX `fk_Ingresos_Productos1_idx` (`Productos_id_productos` ASC, `Productos_Categoria_id_categoria` ASC, `Productos_Proveedores_id_proveedores` ASC) VISIBLE,
  INDEX `fk_Ingresos_Empleados1_idx` (`Empleados_id_empleados` ASC, `Empleados_Sucursal_id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_Ingresos_Sucursal1`
    FOREIGN KEY (`Sucursal_id_sucursal`)
    REFERENCES `sistemaVentas`.`Sucursal` (`id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ingresos_Productos1`
    FOREIGN KEY (`Productos_id_productos` , `Productos_Categoria_id_categoria` , `Productos_Proveedores_id_proveedores`)
    REFERENCES `sistemaVentas`.`Productos` (`id_productos` , `Categoria_id_categoria` , `Proveedores_id_proveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ingresos_Empleados1`
    FOREIGN KEY (`Empleados_id_empleados` , `Empleados_Sucursal_id_sucursal`)
    REFERENCES `sistemaVentas`.`Empleados` (`id_empleados` , `Sucursal_id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sistemaVentas`.`Egresos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sistemaVentas`.`Egresos` (
  `id_egresos` INT NOT NULL AUTO_INCREMENT,
  `nombre_producto` VARCHAR(45) NULL,
  `cantidad_vendida` INT NULL,
  `precio_unitario` DECIMAL(9,2) NULL,
  `fecha_venta` DATE NULL,
  `numero_factura` INT NULL,
  `metodo_pago` INT NULL,
  `observaciones` MEDIUMTEXT NULL,
  `Sucursal_id_sucursal` INT NOT NULL,
  `Clientes_id_clientes` INT NOT NULL,
  `Clientes_Contacto_id_contacto` INT NOT NULL,
  `Productos_id_productos` INT NOT NULL,
  `Productos_Categoria_id_categoria` INT NOT NULL,
  `Productos_Proveedores_id_proveedores` INT NOT NULL,
  `Empleados_id_empleados` INT NOT NULL,
  `Empleados_Sucursal_id_sucursal` INT NOT NULL,
  PRIMARY KEY (`id_egresos`, `Sucursal_id_sucursal`, `Clientes_id_clientes`, `Clientes_Contacto_id_contacto`, `Productos_id_productos`, `Productos_Categoria_id_categoria`, `Productos_Proveedores_id_proveedores`, `Empleados_id_empleados`, `Empleados_Sucursal_id_sucursal`),
  INDEX `fk_Egresos_Sucursal1_idx` (`Sucursal_id_sucursal` ASC) VISIBLE,
  INDEX `fk_Egresos_Clientes1_idx` (`Clientes_id_clientes` ASC, `Clientes_Contacto_id_contacto` ASC) VISIBLE,
  INDEX `fk_Egresos_Productos1_idx` (`Productos_id_productos` ASC, `Productos_Categoria_id_categoria` ASC, `Productos_Proveedores_id_proveedores` ASC) VISIBLE,
  INDEX `fk_Egresos_Empleados1_idx` (`Empleados_id_empleados` ASC, `Empleados_Sucursal_id_sucursal` ASC) VISIBLE,
  CONSTRAINT `fk_Egresos_Sucursal1`
    FOREIGN KEY (`Sucursal_id_sucursal`)
    REFERENCES `sistemaVentas`.`Sucursal` (`id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Egresos_Clientes1`
    FOREIGN KEY (`Clientes_id_clientes` , `Clientes_Contacto_id_contacto`)
    REFERENCES `sistemaVentas`.`Clientes` (`id_clientes` , `Contacto_id_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Egresos_Productos1`
    FOREIGN KEY (`Productos_id_productos` , `Productos_Categoria_id_categoria` , `Productos_Proveedores_id_proveedores`)
    REFERENCES `sistemaVentas`.`Productos` (`id_productos` , `Categoria_id_categoria` , `Proveedores_id_proveedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Egresos_Empleados1`
    FOREIGN KEY (`Empleados_id_empleados` , `Empleados_Sucursal_id_sucursal`)
    REFERENCES `sistemaVentas`.`Empleados` (`id_empleados` , `Sucursal_id_sucursal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

USE sistemaVentas;
INSERT INTO Sucursal (nombre_sucursal, direccion, ciudad, pais, telefono, correo_electronico, gerente) 
VALUES 
('Sucursal Central', 'Avenida Principal 123', 'Ciudad Principal', 'País Principal', '12345678', 'sucursalcentral@example.com', 'Juan Pérez'),
('Sucursal Norte', 'Calle Norteña 456', 'Ciudad del Norte', 'País del Norte', '23456789', 'sucursalnorte@example.com', 'María López'),
('Sucursal Sur', 'Avenida Sureña 789', 'Ciudad del Sur', 'País del Sur', '34567890', 'sucursalsur@example.com', 'Carlos Rodríguez'),
('Sucursal Este', 'Calle Oriental 321', 'Ciudad del Este', 'País del Este', '45678901', 'sucursaleste@example.com', 'Laura Martínez'),
('Sucursal Oeste', 'Avenida Occidental 654', 'Ciudad del Oeste', 'País del Oeste', '56789012', 'sucursaloeste@example.com', 'Roberto Gómez');

INSERT INTO Empleados (rol, nombre, apellido, dpi, fecha_nac, anio_inicio_labores, estado, usuario, contrasenia, Sucursal_id_sucursal) 
VALUES 
('Vendedor', 'Pedro', 'González', '1234567890123', '1990-05-10', '2015-03-20', 1, 'pedro.gonzalez', 'contraseña1', 1),
('Gerente', 'Ana', 'Sánchez', '2345678901234', '1985-08-15', '2010-07-01', 1, 'ana.sanchez', 'contraseña2', 2),
('Cajero', 'Luis', 'Martínez', '3456789012345', '1992-10-20', '2018-01-10', 1, 'luis.martinez', 'contraseña3', 3),
('Vendedor', 'María', 'López', '4567890123456', '1988-12-25', '2017-09-05', 1, 'maria.lopez', 'contraseña4', 4),
('Cajero', 'Jorge', 'Hernández', '5678901234567', '1995-04-30', '2019-11-15', 1, 'jorge.hernandez', 'contraseña5', 5);

INSERT INTO Proveedores (nombre_institucion, ubicacion, contacto) 
VALUES 
('Proveedor ABC', 'Calle Proveedor 123', 'Juan Pérez'),
('Proveedor XYZ', 'Avenida Proveedor 456', 'María Gómez'),
('Proveedor 123', 'Boulevard Proveedor 789', 'Luis Martínez'),
('Proveedor ABCD', 'Calle Proveedor 321', 'Ana López'),
('Proveedor XYZZY', 'Avenida Proveedor 654', 'Pedro Rodríguez');

INSERT INTO Representante (nombre, apellido, cargo, telefono, correo_electronico, direccion, Proveedores_id_proveedores) 
VALUES 
('Juan', 'Pérez', 'Representante de Ventas', '12345678', 'juanperez@example.com', 'Calle Representante 123', 1),
('María', 'Gómez', 'Gerente de Cuentas', '23456789', 'mariagomez@example.com', 'Avenida Representante 456', 2),
('Luis', 'Martínez', 'Director Comercial', '34567890', 'luismartinez@example.com', 'Boulevard Representante 789', 3),
('Ana', 'López', 'Representante de Ventas', '45678901', 'analopez@example.com', 'Calle Representante 321', 4),
('Pedro', 'Rodríguez', 'Gerente de Cuentas', '56789012', 'pedrorodriguez@example.com', 'Avenida Representante 654', 5);

INSERT INTO Contacto (telefono, correo_electronico, tipo_contacto) 
VALUES 
('11111111', 'contacto1@example.com', 'Cliente'),
('22222222', 'contacto2@example.com', 'Proveedor'),
('33333333', 'contacto3@example.com', 'Empleado'),
('44444444', 'contacto4@example.com', 'Otro'),
('55555555', 'contacto5@example.com', 'Cliente');

INSERT INTO Clientes (nombre, apellido, dpi, nit, Contacto_id_contacto) 
VALUES 
('Carlos', 'López', '1234567890123', 'C2345678', 1),
('Laura', 'García', '2345678901234', 'C3456789', 5),
('Roberto', 'Martínez', '3456789012345', 'C4567890', 1),
('Andrea', 'Hernández', '4567890123456', 'C5678901', 5),
('Miguel', 'Rodríguez', '5678901234567', 'C6789012', 1);

INSERT INTO Categoria (nombre_categoria, descripcion, productos_asociados) 
VALUES 
('Electrónica', 'Productos electrónicos', 'Televisores, computadoras, smartphones'),
('Ropa', 'Ropa para hombres y mujeres', 'Camisetas, pantalones, vestidos'),
('Alimentos', 'Productos alimenticios', 'Frutas, verduras, carne'),
('Hogar', 'Productos para el hogar', 'Muebles, electrodomésticos, utensilios'),
('Juguetes', 'Juguetes para niños', 'Muñecas, carros, juegos de mesa');

INSERT INTO Productos (codigo_sku, nombre, descripcion, stock, precio_compra, precio_venta, Categoria_id_categoria, Proveedores_id_proveedores) 
VALUES 
('SKU001', 'Televisor LED', 'Televisor LED de 55 pulgadas', 100, 500.00, 700.00, 1, 1),
('SKU002', 'Camiseta de Algodón', 'Camiseta de algodón para hombres', 150, 10.00, 20.00, 2, 2),
('SKU003', 'Manzanas', 'Manzanas frescas', 200, 0.50, 1.00, 3, 3),
('SKU004', 'Sofá', 'Sofá de cuero', 50, 300.00, 500.00, 4, 4),
('SKU005', 'Muñeca', 'Muñeca de porcelana', 20, 15.00, 30.00, 5, 5);

INSERT INTO Ingresos (nombre_producto, cantidad_ingresada, precio_unitario, fecha_compra, numero_factura, metodo_pago, observaciones, Sucursal_id_sucursal, Productos_id_productos, Productos_Categoria_id_categoria, Productos_Proveedores_id_proveedores, Empleados_id_empleados, Empleados_Sucursal_id_sucursal) 
VALUES 
('Televisor LED', 10, 500.00, '2024-04-01', 12345, 1, 'Compra al proveedor', 1, 1, 1, 1, 1, 1),
('Camiseta de Algodón', 20, 10.00, '2024-04-05', 23456, 2, 'Compra al proveedor', 2, 2, 2, 2, 2, 2),
('Manzanas', 30, 0.50, '2024-04-10', 34567, 3, 'Compra al proveedor', 3, 3, 3, 3, 3, 3),
('Sofá', 5, 300.00, '2024-04-15', 45678, 1, 'Compra al proveedor', 4, 4, 4, 4, 4, 4),
('Muñeca', 8, 15.00, '2024-04-20', 56789, 2, 'Compra al proveedor', 5, 5, 5, 5, 5, 5);

INSERT INTO Egresos (nombre_producto, cantidad_vendida, precio_unitario, fecha_venta, numero_factura, metodo_pago, observaciones, Sucursal_id_sucursal, Clientes_id_clientes, Clientes_Contacto_id_contacto, Productos_id_productos, Productos_Categoria_id_categoria, Productos_Proveedores_id_proveedores, Empleados_id_empleados, Empleados_Sucursal_id_sucursal) 
VALUES 
('Televisor LED', 5, 700.00, '2024-04-02', 54321, 1, 'Venta al cliente', 1, 1, 1, 1, 1, 1, 1, 1),
('Camiseta de Algodón', 10, 20.00, '2024-04-06', 65432, 2, 'Venta al cliente', 2, 2, 5, 2, 2, 2, 2, 2),
('Manzanas', 15, 1.00, '2024-04-11', 76543, 3, 'Venta al cliente', 3, 3, 1, 3, 3, 3, 3, 3),
('Sofá', 2, 500.00, '2024-04-16', 87654, 1, 'Venta al cliente', 4, 4, 5, 4, 4, 4, 4, 4),
('Muñeca', 4, 30.00, '2024-04-21', 98765, 2, 'Venta al cliente', 5, 5, 1, 5, 5, 5, 5, 5);


-- 1 - Listar todos los usuarios
SELECT * FROM Empleados;

-- 2 - Listar todos los productos
SELECT * FROM Productos;

-- 3 - Listar todos los clientes
SELECT * FROM Clientes;

-- 4 - Mostrar la cantidad de productos registrados en el sistema donde su saldo sea mayor a 0.
SELECT COUNT(*) AS cantidad_productos
FROM Productos
WHERE stock > 0;

-- 5 - Listar los productos donde su saldo sea menor a 5
SELECT * FROM Productos
WHERE stock < 5;

-- 6 - Mostrar el producto con el stock más alto
SELECT *
FROM Productos
ORDER BY stock DESC
LIMIT 1;

-- 7 - Mostrar el producto con el stock más bajo
SELECT *
FROM Productos
ORDER BY stock ASC
LIMIT 1;

-- 8 - Mostrar al cliente con más compras
SELECT Clientes.id_clientes, Clientes.nombre, Clientes.apellido, (SELECT SUM(precio_unitario * cantidad_vendida) FROM Egresos WHERE Egresos.Clientes_id_clientes = Clientes.id_clientes) AS total_compras FROM Clientes ORDER BY total_compras DESC LIMIT 1;


-- 9 - Mostrar al proveedor que más se le ha adquirido productos
SELECT Proveedores.id_proveedores, Proveedores.nombre_institucion, COUNT(*) AS total_compras
FROM Proveedores
INNER JOIN Productos ON Proveedores.id_proveedores = Productos.Proveedores_id_proveedores
GROUP BY Proveedores.id_proveedores
ORDER BY total_compras DESC
LIMIT 1;

-- 10 - El valor total en quetzales de todos los productos que tienen stock disponible en bodega
SELECT SUM(stock * precio_venta) AS valor_total
FROM Productos
WHERE stock > 0;
